<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.SysLevelMapper">
    
    <resultMap type="SysLevel" id="SysLevelResult">
        <result property="levelId"    column="level_id"    />
        <result property="levelCode"    column="level_code"    />
        <result property="levelName"    column="level_name"    />
        <result property="levelSort"    column="level_sort"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
        <result property="remark"    column="remark"    />
    </resultMap>

    <sql id="selectSysLevelVo">
        select level_id, level_code, level_name, level_sort, create_by, create_time, update_by, update_time, remark from sys_level
    </sql>

    <select id="selectSysLevelList" parameterType="SysLevel" resultMap="SysLevelResult">
        <include refid="selectSysLevelVo"/>
        <where>  
            <if test="levelCode != null "> and level_code = #{levelCode}</if>
            <if test="levelName != null  and levelName != ''"> and level_name like concat('%', #{levelName}, '%')</if>
            <if test="levelSort != null "> and level_sort = #{levelSort}</if>
        </where>
    </select>
    
    <select id="selectSysLevelByLevelId" parameterType="Long" resultMap="SysLevelResult">
        <include refid="selectSysLevelVo"/>
        where level_id = #{levelId}
    </select>
        
    <insert id="insertSysLevel" parameterType="SysLevel" useGeneratedKeys="true" keyProperty="levelId">
        insert into sys_level
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="levelCode != null">level_code,</if>
            <if test="levelName != null">level_name,</if>
            <if test="levelSort != null">level_sort,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="remark != null">remark,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="levelCode != null">#{levelCode},</if>
            <if test="levelName != null">#{levelName},</if>
            <if test="levelSort != null">#{levelSort},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="remark != null">#{remark},</if>
         </trim>
    </insert>

    <update id="updateSysLevel" parameterType="SysLevel">
        update sys_level
        <trim prefix="SET" suffixOverrides=",">
            <if test="levelCode != null">level_code = #{levelCode},</if>
            <if test="levelName != null">level_name = #{levelName},</if>
            <if test="levelSort != null">level_sort = #{levelSort},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="remark != null">remark = #{remark},</if>
        </trim>
        where level_id = #{levelId}
    </update>

    <delete id="deleteSysLevelByLevelId" parameterType="Long">
        delete from sys_level where level_id = #{levelId}
    </delete>

    <delete id="deleteSysLevelByLevelIds" parameterType="String">
        delete from sys_level where level_id in 
        <foreach item="levelId" collection="array" open="(" separator="," close=")">
            #{levelId}
        </foreach>
    </delete>
</mapper>